@model Yeast.Model.Admin.SliderViewModel
@{
    ViewBag.Title = "اسلایدر";
    ViewBag.SelectedPage = "SliderSetting";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
@section CssStyle{
    <link href="~/Content/css/ladda-themeless-rtl.min.css" rel="stylesheet" />
    <link href="~/Content/kartik-v-bootstrap-fileinput/css/fileinput.min.css" rel="stylesheet" />
}
<div class="page-content">
    <!-- BEGIN PAGE HEADER-->
    <!-- BEGIN PAGE BAR -->
    <div class="page-bar">
        <ul class="page-breadcrumb">
            <li>
                <a href="@Url.Action("Index","Dashboard", new { Area = "Admin" })">داشبورد</a>
                <i class="fa fa-circle"></i>
            </li>
            <li>
                <a href="#">مطلب</a>
                <i class="fa fa-circle"></i>
            </li>
            <li>
                <span>درباره‌ی ما</span>
            </li>
        </ul>
    </div>
    <!-- END PAGE BAR -->
    <!-- BEGIN PAGE TITLE-->
    <h1 class="page-title">
        <small></small>
    </h1>
    <!-- END PAGE TITLE-->
    <!-- END PAGE HEADER-->
    <div class="note note-info">
        <p> هر کدام از این فیلدها با توجه به زبان سایت نمایش داده خواهند شد. </p>
    </div>
    <div class="row">
        <div class="col-md-12">
            <!-- BEGIN SAMPLE FORM PORTLET-->
            <div class="portlet light bordered">
                <div class="portlet-title">
                    <div class="caption font-green-haze">
                        <i class="fa fa-check font-green-haze"></i>
                        <span class="caption-subject bold uppercase">اصلاح</span>
                    </div>
                    <div class="actions">
                        <a class="btn btn-circle btn-icon-only btn-default fullscreen" href="javascript:;" data-original-title="تمام صفحه" title=""> </a>
                    </div>
                </div>
                <div class="portlet-body form">
                    <form role="form" class="form-horizontal" method="post" action="@Url.Action("Index")" enctype="multipart/form-data">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="ImageName" id="ImageName" value="@(string.Format("{0}|{1}|{2}",Model.Image1, Model.Image2, Model.Image3))">
                        <input type="hidden" name="ImageNameDeleted" id="ImageNameDeleted">
                        <div class="form-body">
                            <div class="form-group form-md-line-input">
                                <label class="col-md-1 control-label" for="Name">تصاویر</label>
                                <div class="col-md-11">
                                    <input id="input-id" type="file" class="file" name="file[]" multiple data-show-preview="true" data-msg-placeholder="تصاویر انتخابی...">
                                    <div class="form-control-focus"> </div>
                                    <span class="help-block">تگ کورد نظرتون جستجو کنید و اگر وجود ندارد می‌توانید آن را همینجا بنویسید و دکمه اینتر را بزنید</span>
                                </div>
                            </div>
                            <div class="form-group form-md-line-input">
                                <label class="col-md-1 control-label" for="Name">متن اسلایدر اول</label>
                                <div class="col-md-11">
                                    <input type="text" class="form-control" id="TextImag1" name="TextImag1" value="@Model.TextImag1" required placeholder="عنوان را وارد نمایید">
                                    @Html.ValidationMessageFor(model => model.TextImag1)
                                    <div class="form-control-focus"> </div>
                                </div>
                            </div>
                            <div class="form-group form-md-line-input">
                                <label class="col-md-1 control-label" for="Name">ایمیل</label>
                                <div class="col-md-11">
                                    <input type="text" class="form-control" id="" name="TextImag1" value="@Model.Email" required placeholder="عنوان را وارد نمایید">
                                    @Html.ValidationMessageFor(model => model.TextImag1)
                                    <div class="form-control-focus"> </div>
                                </div>
                            </div>
                            <div class="form-group form-md-line-input">
                                <label class="col-md-1 control-label" for="Name">متن اسلایدر اول</label>
                                <div class="col-md-11">
                                    <input type="text" class="form-control" id="TextImag2" name="TextImag2" value="@Model.TextImag2" required placeholder="عنوان را وارد نمایید">
                                    @Html.ValidationMessageFor(model => model.TextImag2)
                                    <div class="form-control-focus"> </div>
                                </div>
                            </div>
                            <div class="form-group form-md-line-input">
                                <label class="col-md-1 control-label" for="Name">متن اسلایدر اول</label>
                                <div class="col-md-11">
                                    <input type="text" class="form-control" id="TextImag3" name="TextImag3" value="@Model.TextImag3" required placeholder="عنوان را وارد نمایید">
                                    @Html.ValidationMessageFor(model => model.TextImag3)
                                    <div class="form-control-focus"> </div>
                                </div>
                            </div>
                        </div>
                        <div class="form-actions">
                            <div class="row">
                                <div class="col-md-offset-2 col-md-10">
                                    <button type="reset" class="btn default">کنسل</button>
                                    <button type="submit" data-loading-text="ارسال..." class="btn blue btn-loading ">تایید</button>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
            <!-- END SAMPLE FORM PORTLET-->
        </div>
    </div>
</div>
@section Javascripts{

    <script src="~/Content/js/jquery.validate.js"></script>
    <script src="~/Content/js/jquery.validate.unobtrusive.js"></script>
    <script src="~/Content/js/spin.min.js"></script>
    <script src="~/Content/js/ladda.min.js"></script>
    <script src="~/Content/kartik-v-bootstrap-fileinput/js/plugins/piexif.min.js"></script>
    <script src="~/Content/kartik-v-bootstrap-fileinput/js/plugins/sortable.min.js"></script>
    <script src="~/Content/kartik-v-bootstrap-fileinput/js/plugins/purify.min.js"></script>
    @*<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.11.0/umd/popper.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta/js/bootstrap.min.js" type="text/javascript"></script>*@
    <script src="~/Content/kartik-v-bootstrap-fileinput/js/fileinput.js"></script>
    <script src="~/Content/kartik-v-bootstrap-fileinput/js/locales/fa.js"></script>
    <script type="text/javascript">
        jQuery.validator.setDefaults({ ignore: ":hidden:not(textarea)" });
        var form1 = $('form[data-loading-text]');
        var error1 = $('.alert-danger', form1);
        var success1 = $('.alert-success', form1);

        // حذف تمام تگ‌هاي يك قطعه متن
        function removeAllTagsAndTrim(html) {
            return !html ? "" : jQuery.trim(html.replace(/(<([^>]+)>)/ig, ""));
        }

        // اين تنظيم براي پردازش اعتبارسنجي اديتور مخفي وب لازم است
        jQuery.validator.setDefaults({ ignore: ":hidden:not(textarea)" });

        // متد اصلي اعتبارسنجي را ابتدا ذخيره مي‌كنيم
        jQuery.validator.methods.originalRequired = jQuery.validator.methods.required;
        // نحوه بازنويسي متد توكار اعتبار سنجي جهت استفاده از يك متد سفارشي
        jQuery.validator.addMethod("required", function (value, element, param) {
            value = removeAllTagsAndTrim(value);
            if (!value) {
                $(".froala-element").focus();
                $(".froala-element").css({ "border-color": "red" });
                return false;
            }
            //  فراخواني متد اصلي اعتبار سنجي در صورت شكست تابع سفارشي
            return jQuery.validator.methods.originalRequired.call(this, value, element, param);
        }, jQuery.validator.messages.required);

        form1.validate({
            errorElement: 'span', //default input error message container
            errorClass: 'help-block help-block-error', // default input error message class
            focusInvalid: false, // do not focus the last invalid input
            ignore: ":hidden:not(textarea)",  // validate all fields including form hidden input
            invalidHandler: function (event, validator) { //display error alert on form submit
                success1.hide();
                error1.show();
                App.scrollTo(error1, -200);
            },

            errorPlacement: function (error, element) { // render error placement for each input type
                var cont = $(element).parent('.input-group');
                if (cont.size() > 0) {
                    cont.after(error);
                } else {
                    element.after(error);
                }
            },

            highlight: function (element) { // hightlight error inputs

                $(element)
                    .closest('.form-group').addClass('has-error'); // set error class to the control group
            },

            unhighlight: function (element) { // revert the change done by hightlight
                $(element)
                    .closest('.form-group').removeClass('has-error'); // set error class to the control group
            },

            success: function (label) {
                label
                    .closest('.form-group').removeClass('has-error'); // set success class to the control group
            },

            submitHandler: function (form) {
                success1.show();
                error1.hide();
                form.submit();
                form1.button('loading')
            }
        });


        $("#input-id").fileinput({
            rtl: true,
            required: true,
            uploadUrl: "@Url.Action("FroalaUploadImage", "SliderSetting", new { Area = "Admin" })",
            deleteUrl: '@Url.Action("FroalaUploadImage", "SliderSetting", new { Area = "Admin" })',
            uploadAsync: true,
            minFileCount: 1,
            maxFileCount: 3,
            validateInitialCount: true,
            overwriteInitial: false,
            language: "fa",
            previewFileType: "image",
            allowedFileExtensions: ["jpg", "png"],
            maxFileSize: 1024,
            initialPreview: [
                @if (!string.IsNullOrEmpty(Model.Image1))
                {
                    <text>"<img class='file-preview-image kv-preview-data' src='@Url.Content(Model.Image1)'>",</text>
                }
/**/
/**/
/**/
                @if (!string.IsNullOrEmpty(Model.Image2))
                {
                    <text>"<img class='file-preview-image kv-preview-data' src='@Url.Content(Model.Image2)'>",</text>
                }
/**/
/**/
/**/
                @if (!string.IsNullOrEmpty(Model.Image3))
                {
                    <text>"<img class='file-preview-image kv-preview-data' src='@Url.Content(Model.Image3)'>",</text>
                }
            ],
            initialPreviewConfig: [
                @if (!string.IsNullOrEmpty(Model.Image1))
                {
                     <text>{ key: '@Url.Content(Model.Image1).Replace("/Content/upload/images/", string.Empty)' },</text>
                }
/**/
/**/
/**/
                @if (!string.IsNullOrEmpty(Model.Image2))
                {
                     <text>{ key: '@Url.Content(Model.Image2).Replace("/Content/upload/images/", string.Empty)' },</text>
                }
/**/
/**/
/**/
                @if (!string.IsNullOrEmpty(Model.Image3))
                {
                     <text>{ key: '@Url.Content(Model.Image3).Replace("/Content/upload/images/", string.Empty)' },</text>
                }
            ],
            initialCaption: "تصاویر اسلاید شو صفحه نخست سایت"
        });

        $('#input-id').on('fileuploaded', function (event, data, previewId, index) {
            var images = $('#ImageName').val();
            var isDublicat = false;
            if (images.length > 0) {
                var arrayImage = images.split('|');
                for (var i = 0; i < length; i++) {
                    if (arrayImage[i] == data.response.initialPreviewConfig[0].key)isDublicat = true;
                }
                if (isDublicat == false) $('#ImageName').val(images + '|' + '/Content/upload/images/' + data.response.initialPreviewConfig[0].key)
            }
            else {
                $('#ImageName').val('/Content/upload/images/' + data.response.initialPreviewConfig[0].key)
            }
        });

        $('#input-id').on('filebeforedelete', function (event, key, data) {
            var images = $('#ImageNameDeleted').val();
            var isDublicat = false;
            if (images.length > 0) {
                var arrayImage = images.split('|');
                for (var i = 0; i < length; i++) {
                    if (arrayImage[i] == data.response) isDublicat = true;
                }
                if (isDublicat == false) {
                    $('#ImageNameDeleted').val(images + '|' + '/Content/upload/images/' + key);
                    $('#ImageName').val($('#ImageName').val().replace('/Content/upload/images/' + key, '')); 
                }
            }
            else {
                $('#ImageNameDeleted').val('/Content/upload/images/' + key)
                $('#ImageName').val($('#ImageName').val().replace('/Content/upload/images/' + key, '')); 
            }

            $('#ImageName').val($('#ImageName').val().replace('||', '|')); 
        });
	//# sourceURL=ProductEdit.js
    </script>
}


